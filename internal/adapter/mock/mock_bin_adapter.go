// Code generated by MockGen. DO NOT EDIT.
// Source: bin_adapter.go

// Package mock_adapter is a generated GoMock package.
package mock_adapter

import (
	context "context"
	reflect "reflect"

	model "github.com/ISDL-dev/MaP1058-socket-client/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockBinAdapter is a mock of BinAdapter interface.
type MockBinAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockBinAdapterMockRecorder
}

// MockBinAdapterMockRecorder is the mock recorder for MockBinAdapter.
type MockBinAdapterMockRecorder struct {
	mock *MockBinAdapter
}

// NewMockBinAdapter creates a new mock instance.
func NewMockBinAdapter(ctrl *gomock.Controller) *MockBinAdapter {
	mock := &MockBinAdapter{ctrl: ctrl}
	mock.recorder = &MockBinAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBinAdapter) EXPECT() *MockBinAdapterMockRecorder {
	return m.recorder
}

// ReceiveADValues mocks base method.
func (m *MockBinAdapter) ReceiveADValues(ctx context.Context) (*model.Signals, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReceiveADValues", ctx)
	ret0, _ := ret[0].(*model.Signals)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReceiveADValues indicates an expected call of ReceiveADValues.
func (mr *MockBinAdapterMockRecorder) ReceiveADValues(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReceiveADValues", reflect.TypeOf((*MockBinAdapter)(nil).ReceiveADValues), ctx)
}
